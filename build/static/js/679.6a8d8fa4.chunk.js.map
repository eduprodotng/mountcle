{"version":3,"file":"static/js/679.6a8d8fa4.chunk.js","mappings":"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","sources":["app/views/sessions/CustomLabel.js","app/views/sessions/JwtLogin.jsx","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js"],"sourcesContent":["import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nconst CustomLabel = ({ label, required }) => (\n  <Typography component=\"span\" variant=\"body1\">\n    {label}\n    {required && <span style={{ color: \"red\" }}> *</span>}\n  </Typography>\n);\n\nexport default CustomLabel;\n","import { LoadingButton } from \"@mui/lab\";\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Grid,\n  IconButton,\n  InputAdornment,\n  TextField,\n} from \"@mui/material\";\nimport { Box, styled, useTheme } from \"@mui/system\";\nimport { Paragraph } from \"../../../app/components/Typography\";\nimport useAuth from \"../../../app/hooks/useAuth\";\nimport { Field, Formik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport jwtDecode from \"jwt-decode\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport pic from \"./one.jpg\";\nimport pic1 from \"./two.jpg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport logo from \"./logohlhs.png\";\nimport axios from \"axios\";\nimport pic3 from \"./pic-2.png\";\nimport { faGoogle, faApple } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./style.css\";\nimport CustomLabel from \"./CustomLabel\";\n\n// inital login credentials\nconst initialValues = {\n  identifier: \"\",\n  password: \"\",\n};\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  // email: Yup.string()\n  //   .email(\"Invalid Email address\")\n  //   .required(\"Email is required!\"),\n  // username: Yup.string()\n  //   .email(\"Invalid Username\")\n  //   .required(\"Username is required!\"),\n});\nconst JwtLogin = () => {\n  const navigate = useNavigate();\n  const theme = useTheme();\n\n  const [loading, setLoading] = useState(false);\n\n  const [showPassword, setShowPassword] = useState(false);\n  const { login } = useAuth();\n  const [accountSettings, setAccountSettings] = useState({\n    name: \"\",\n    motto: \"\",\n    address: \"\",\n    phone: \"\",\n    phonetwo: \"\",\n    email: \"\",\n    sessionStart: \"\",\n    sessionEnd: \"\",\n    schoolLogo: \"\",\n  });\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const handleFormSubmit = async (values) => {\n    console.log(\"handleFormSubmit is triggered\");\n\n    try {\n      // Assuming your login function returns a JWT token upon successful login\n      const response = await login(values.identifier, values.password);\n\n      if (response.status === 200) {\n        // Successful login\n        // Redirect the user after successful login\n        checkUserRoleAndRedirect();\n      } else {\n        // Handle other status codes (e.g., 401 for unauthorized)\n        console.error(\"Login failed with status:\", response.status);\n        toast.error(\"Invalid credentials\"); // Display an error notification\n      }\n    } catch (error) {\n      console.error(\"Incorrect Username/Email or Password:\", error);\n      toast.error(\"Incorrect Username/Email or Password\");\n    }\n  };\n\n  const getUserRoleFromToken = () => {\n    // Implement this function to extract the user's role from the JWT token.\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    if (jwtToken) {\n      const decodedToken = jwtDecode(jwtToken);\n      return decodedToken.role;\n    }\n    return \"guest\"; // Return a default role for unauthenticated users\n  };\n\n  const checkUserRoleAndRedirect = () => {\n    const userRole = getUserRoleFromToken();\n\n    if (userRole === \"admin\") {\n      navigate(\"/dashboard/admin\");\n    } else if (userRole === \"teacher\") {\n      navigate(\"/teacher/dashboard\");\n    } else if (userRole === \"student\") {\n      navigate(\"/student/dashboard/default\");\n    } else {\n      navigate(\"/session/signin\"); // Redirect unauthenticated users to sign-in page\n    }\n  };\n\n  useEffect(() => {\n    const fetchAccountSettings = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/api/account-setting`);\n        const { data } = response.data;\n\n        // Set the retrieved school settings to the state\n        setAccountSettings(data);\n      } catch (error) {\n        console.error(\"Error fetching school settings:\", error);\n      }\n    };\n\n    fetchAccountSettings();\n  }, [apiUrl]);\n\n  return (\n    <div className=\"authincation d-flex flex-column flex-lg-row flex-column-fluid\">\n      <div\n        className=\"login-aside text-center d-flex flex-column flex-row-auto\"\n        // style={{ backgroundColor: \"#000080 !important\" }}\n      >\n        <div className=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\n          <div className=\"text-center mb-lg-4 mb-2 pt-5 logo\">\n            <img\n              src={`https://edupros.s3.amazonaws.com/${accountSettings.schoolLogo}`}\n              style={{\n                width: \"200px\",\n                height: \"130px\",\n              }}\n            />\n          </div>\n          <p style={{ fontWeight: \"700\", fontSize: \"20px\", color: \"white\" }}>\n            {\" \"}\n            {accountSettings.name || \"\"}\n          </p>\n          <p className=\"mb-4\" style={{ color: \"white\" }}>\n            Welcome Ba!...Login to your School Dashboard. 📚💡\n            <br />\n          </p>\n        </div>\n      </div>\n      <div\n        className=\"container flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\"\n        style={{ width: \"95%\" }}\n      >\n        <div className=\"d-flex justify-content-center h-100 align-items-center\">\n          <div className=\"authincation-content style-2\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-xl-12 tab-content\">\n                <div\n                  id=\"sign-up\"\n                  className=\"auth-form tab-pane fade show active form-validation\"\n                >\n                  <Formik\n                    onSubmit={handleFormSubmit}\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"text-center mb-4\">\n                          <h3 className=\"text-center mb-2 text-black\">\n                            Sign In to\n                          </h3>\n                          <span>Your School Dashboard</span>\n                        </div>\n\n                        <div className=\"mb-3\">\n                          <TextField\n                            fullWidth\n                            type=\"text\"\n                            name=\"identifier\"\n                            label={\n                              <CustomLabel label=\"Email or Username\" required />\n                            }\n                            onBlur={handleBlur}\n                            value={values.identifier}\n                            onChange={handleChange}\n                            helperText={touched.identifier && errors.identifier}\n                            error={Boolean(\n                              errors.identifier && touched.identifier\n                            )}\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <TextField\n                            fullWidth\n                            name=\"password\"\n                            type={showPassword ? \"text\" : \"password\"}\n                            label={<CustomLabel label=\"Password\" required />}\n                            variant=\"outlined\"\n                            onBlur={handleBlur}\n                            value={values.password}\n                            onChange={handleChange}\n                            helperText={touched.password && errors.password}\n                            error={Boolean(errors.password && touched.password)}\n                            sx={{ mb: 1.5 }}\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <IconButton\n                                    onClick={() =>\n                                      setShowPassword(!showPassword)\n                                    }\n                                    edge=\"end\"\n                                  >\n                                    {showPassword ? (\n                                      <VisibilityOff />\n                                    ) : (\n                                      <Visibility />\n                                    )}\n                                  </IconButton>\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                        </div>\n                        <a\n                          href=\"/session/forgot-password\"\n                          className=\"float-end mb-4\"\n                          style={{\n                            color: \"red !important\",\n                            fontSize: \"15px\",\n                            fontWeight: \"800\",\n                          }}\n                        >\n                          Forgot Password?\n                        </a>\n                        <LoadingButton\n                          type=\"submit\"\n                          color=\"primary\"\n                          loading={loading}\n                          variant=\"contained\"\n                          sx={{ my: 2 }}\n                          className=\"btn btn-block btn-primary\"\n                          style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\n                        >\n                          Sign In\n                        </LoadingButton>\n\n                        <Paragraph>\n                          <br></br>\n                          Do you want to go to the home page?\n                          <NavLink\n                            to=\"https://www.edupro.com.ng\"\n                            style={{\n                              color: theme.palette.primary.main,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Home\n                          </NavLink>\n                        </Paragraph>\n                      </form>\n                    )}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default JwtLogin;\n","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultProps } from '@mui/material/DefaultPropsProvider';\nimport Button from '@mui/material/Button';\nimport { ButtonGroupContext } from '@mui/material/ButtonGroup';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport resolveProps from '@mui/utils/resolveProps';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('span', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useDefaultProps({\n    props: resolvedProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown and the button becomes disabled.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;"],"names":["_ref","label","required","_jsxs","Typography","component","variant","children","_jsx","style","color","initialValues","identifier","password","validationSchema","Yup","shape","min","JwtLogin","navigate","useNavigate","theme","useTheme","loading","setLoading","useState","showPassword","setShowPassword","login","useAuth","accountSettings","setAccountSettings","name","motto","address","phone","phonetwo","email","sessionStart","sessionEnd","schoolLogo","apiUrl","process","checkUserRoleAndRedirect","userRole","getUserRoleFromToken","jwtToken","localStorage","getItem","jwtDecode","role","useEffect","async","response","axios","data","error","console","fetchAccountSettings","className","src","width","height","fontWeight","fontSize","id","Formik","onSubmit","log","values","status","toast","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","type","CustomLabel","onBlur","value","onChange","helperText","Boolean","sx","mb","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","VisibilityOff","Visibility","href","LoadingButton","my","paddingTop","paddingBottom","Paragraph","NavLink","to","palette","primary","main","marginLeft","ToastContainer","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","marginRight","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","_ref2","visibility","display","left","size","transform","vars","action","disabled","right","React","inProps","ref","contextProps","ButtonGroupContext","resolvedProps","resolveProps","useDefaultProps","idProp","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator"],"sourceRoot":""}