{"version":3,"file":"static/js/454.cf798430.chunk.js","mappings":"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","sources":["app/views/studentdashboard/Analytics.jsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { Fragment, React, useState, useContext, useEffect } from \"react\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { Box } from \"@mui/system\";\nimport {\n  Card,\n  Button,\n  Grid,\n  styled,\n  useTheme,\n  Typography,\n  Table,\n} from \"@mui/material\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMoneyBillAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Calendar from \"react-calendar\";\nimport \"./calendar.css\";\nimport axios from \"axios\";\nimport useAuth from \"../../hooks/useAuth\";\n\nimport \"./style.css\";\n\nimport { SessionContext } from \"../../components/MatxLayout/Layout1/SessionContext\";\n\n\nconst ContentBox = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n}));\n\nconst Title = styled(\"span\")(() => ({\n  fontSize: \"1rem\",\n  fontWeight: \"500\",\n  marginRight: \".5rem\",\n  textTransform: \"capitalize\",\n}));\n\nconst SubTitle = styled(\"span\")(({ theme }) => ({\n  fontSize: \"0.875rem\",\n  color: theme.palette.text.secondary,\n}));\n\nconst H4 = styled(\"h4\")(({ theme }) => ({\n  fontSize: \"1rem\",\n  fontWeight: \"500\",\n  marginBottom: \"16px\",\n  textTransform: \"capitalize\",\n  color: theme.palette.text.secondary,\n}));\nconst StyledTable = styled(Table)(() => ({\n  whiteSpace: \"pre\",\n  \"& thead\": {\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\n  },\n  \"& tbody\": {\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\n  },\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(1),\n}));\nconst NoticeList = styled(\"div\")(() => ({\n  marginBottom: \"20px\",\n  \"& .post-date\": {\n    padding: \"10px\",\n    borderRadius: \"5px\",\n    display: \"inline-block\",\n    marginRight: \"10px\",\n  },\n}));\nconst getRandomColor = () => {\n  const colors = [\"skyblue\", \"yellow\", \"pink\", \"blue\"];\n  const randomIndex = Math.floor(Math.random() * colors.length);\n  return colors[randomIndex];\n};\n\nconst Analytics = () => {\n  const { data, loading, error } = useFetch(\"/get-admin\");\n  const { palette } = useTheme();\n  const [notices, setNotices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const { currentSession } = useContext(SessionContext);\n\n  const { logout, user } = useAuth();\n\n\n\n  const handleChangePage = (_, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const apiUrl = process.env.REACT_APP_API_URL.trim();\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/api/get-all-notices/${currentSession._id}`);\n        setNotices(response.data);\n      } catch (error) {\n        console.error(\"Error fetching notices:\", error);\n\n        if (error.response) {\n          console.error(\"Server responded with:\", error.response.data);\n        }\n      }\n    };\n\n    fetchNotices();\n  }, [apiUrl, currentSession]);\n  // Fetch user counts\n  const [userCounts, setUserCounts] = useState({\n    students: 0,\n    teachers: 0,\n    parents: 0,\n    admins: 0,\n  });\n  const [studentCount, setStudentCount] = useState(0);\n// get all users in a class \n\n\n\nuseEffect(() => {\n  // Fetch data from the API with Authorization token\n  const fetchStudents = async () => {\n    try {\n      const token = localStorage.getItem(\"jwtToken\"); // Retrieve the JWT token from localStorage\n      const headers = {\n        Authorization: `Bearer ${token}`, // Set the Authorization header\n      };\n\n      const response = await fetch(\n        `${apiUrl}/api/get-all-students/${user.classname}/${currentSession._id}`,\n        {\n          headers, // Pass the headers with the request\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch students\");\n      }\n\n      const data = await response.json();\n\n      // Count the number of students in the returned data\n      const numberOfStudents = data.length;\n\n      // Update the state with the student count\n      setStudentCount(numberOfStudents);\n    } catch (error) {\n      console.error(\"Error fetching student data:\", error);\n    }\n  };\n\n  if (currentSession) {\n    fetchStudents();\n  }\n}, [currentSession, user.classname]); // Fetch data again if currentSession, user.classname, or apiUrl changes\n\n  return (\n    <div>\n      <h2 style={{ paddingTop: \"15px\", paddingLeft: \"10px\" }}>\n        Student Dashboard\n      </h2>\n      <div className=\"row gutters-20\" style={{ marginTop: \"20px\" }}>\n       <h2>No of Students in this class: {studentCount}</h2>\n      </div>\n      <div className=\"row gutters-20\" style={{ marginTop: \"60px\" }}></div>\n      <div className=\"cald\">\n        <div className=\"one\">\n          <div style={{ border: \"1px solid #ddd\", padding: \"20px\" }}>\n            <h2 style={{ marginBottom: \"20px\" }}>Event Calendar</h2>\n            <Calendar\n              onChange={handleDateChange}\n              value={selectedDate}\n              style={{\n                width: \"100% !important\",\n                padding: \"20px\",\n                flexBasis: \"70%\",\n                height: \"500px\",\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"two\">\n          <h2>Notice Board</h2>\n          <div\n            className=\"notice-box-wrap m-height-660\"\n            style={{ display: \"flex\", flexWrap: \"wrap\" }}\n          >\n            {notices.map((notice) => (\n              <NoticeList\n                key={notice._id}\n                style={{ flexBasis: \"48%\", margin: \"0 1%\" }}\n              >\n                <div\n                  className={`post-date bg-${getRandomColor()}`}\n                  style={{ width: \"100%\" }}\n                >\n                  {new Date(notice.date).toLocaleDateString()}\n                </div>\n                <Typography variant=\"h6\" className=\"notice-title\">\n                  <a href=\"#\">{notice.notice}</a>\n                </Typography>\n                <div className=\"entry-meta\">\n                  {notice.posted_by} / <span>5 min ago</span>\n                </div>\n              </NoticeList>\n            ))}\n            {/* ... other notices ... */}\n          </div>\n        </div>\n      </div>\n\n      <Fragment>\n        <ContentBox className=\"analytics\"></ContentBox>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"names":["ContentBox","styled","_ref","theme","margin","breakpoints","down","NoticeList","fontSize","fontWeight","marginRight","textTransform","_ref2","color","palette","text","secondary","_ref3","marginBottom","Table","whiteSpace","paddingLeft","paddingRight","Button","_ref4","spacing","padding","borderRadius","display","getRandomColor","colors","Math","floor","random","length","Analytics","data","loading","error","useFetch","useTheme","notices","setNotices","useState","page","setPage","rowsPerPage","setRowsPerPage","selectedDate","setSelectedDate","Date","currentSession","useContext","SessionContext","logout","user","useAuth","apiUrl","process","trim","useEffect","async","response","axios","_id","console","fetchNotices","userCounts","setUserCounts","students","teachers","parents","admins","studentCount","setStudentCount","headers","Authorization","localStorage","getItem","fetch","classname","ok","Error","numberOfStudents","json","fetchStudents","_jsxs","children","_jsx","style","paddingTop","className","marginTop","border","Calendar","onChange","date","value","width","flexBasis","height","flexWrap","map","notice","toLocaleDateString","Typography","variant","href","posted_by","Fragment"],"sourceRoot":""}