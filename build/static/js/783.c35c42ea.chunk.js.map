{"version":3,"file":"static/js/783.c35c42ea.chunk.js","mappings":"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","sources":["app/views/sessions/CustomLabel.js","app/views/sessions/ForgotPassword.jsx","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js"],"sourcesContent":["import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nconst CustomLabel = ({ label, required }) => (\n  <Typography component=\"span\" variant=\"body1\">\n    {label}\n    {required && <span style={{ color: \"red\" }}> *</span>}\n  </Typography>\n);\n\nexport default CustomLabel;\n","// import { Box, Button, Card, Grid, styled, TextField } from '@mui/material';\n// import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const FlexBox = styled(Box)(() => ({\n//   display: 'flex',\n//   alignItems: 'center',\n// }));\n\n// const JustifyBox = styled(FlexBox)(() => ({\n//   justifyContent: 'center',\n// }));\n\n// const ContentBox = styled(Box)(({ theme }) => ({\n//   padding: 32,\n//   background: theme.palette.background.default,\n// }));\n\n// const ForgotPasswordRoot = styled(JustifyBox)(() => ({\n//   background: '#1A2038',\n//   minHeight: '100vh !important',\n//   '& .card': {\n//     maxWidth: 800,\n//     margin: '1rem',\n//     borderRadius: 12,\n//   },\n// }));\n\n// const ForgotPassword = () => {\n//   const navigate = useNavigate();\n//   const [email, setEmail] = useState('admin@example.com');\n\n//   const handleFormSubmit = () => {\n//     console.log(email);\n//   };\n\n//   return (\n//     <ForgotPasswordRoot>\n//       <Card className=\"card\">\n//         <Grid container>\n//           <Grid item xs={12}>\n//             <JustifyBox p={4}>\n//               <img width=\"300\" src=\"/assets/images/illustrations/dreamer.svg\" alt=\"\" />\n//             </JustifyBox>\n\n//             <ContentBox>\n//               <form onSubmit={handleFormSubmit}>\n//                 <TextField\n//                   type=\"email\"\n//                   name=\"email\"\n//                   size=\"small\"\n//                   label=\"Email\"\n//                   value={email}\n//                   variant=\"outlined\"\n//                   onChange={(e) => setEmail(e.target.value)}\n//                   sx={{ mb: 3, width: '100%' }}\n//                 />\n\n//                 <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\n//                   Reset Password\n//                 </Button>\n\n//                 <Button\n//                   fullWidth\n//                   color=\"primary\"\n//                   variant=\"outlined\"\n//                   onClick={() => navigate(-1)}\n//                   sx={{ mt: 2 }}\n//                 >\n//                   Go Back\n//                 </Button>\n//               </form>\n//             </ContentBox>\n//           </Grid>\n//         </Grid>\n//       </Card>\n//     </ForgotPasswordRoot>\n//   );\n// };\n\n// export default ForgotPassword;\n\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Grid,\n  IconButton,\n  InputAdornment,\n  TextField,\n} from \"@mui/material\";\nimport { Box, styled, useTheme } from \"@mui/system\";\nimport { Paragraph } from \"../../../app/components/Typography\";\nimport useAuth from \"../../../app/hooks/useAuth\";\nimport { Field, Formik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport jwtDecode from \"jwt-decode\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport pic from \"./one.jpg\";\nimport pic1 from \"./two.jpg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport logo from \"./logohlhs.png\";\nimport axios from \"axios\";\nimport pic3 from \"./pic-2.png\";\nimport { faGoogle, faApple } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./style.css\";\nimport CustomLabel from \"./CustomLabel\";\n\n// inital login credentials\nconst initialValues = {\n  identifier: \"\",\n  password: \"\",\n};\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  // email: Yup.string()\n  //   .email(\"Invalid Email address\")\n  //   .required(\"Email is required!\"),\n  // username: Yup.string()\n  //   .email(\"Invalid Username\")\n  //   .required(\"Username is required!\"),\n});\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const theme = useTheme();\n\n  const [loading, setLoading] = useState(false);\n\n  const [showPassword, setShowPassword] = useState(false);\n  const { login } = useAuth();\n  const [accountSettings, setAccountSettings] = useState({\n    name: \"\",\n    motto: \"\",\n    address: \"\",\n    phone: \"\",\n    phonetwo: \"\",\n    email: \"\",\n    sessionStart: \"\",\n    sessionEnd: \"\",\n    schoolLogo: \"\",\n  });\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const handleFormSubmit = async (values) => {\n    console.log(\"handleFormSubmit is triggered\");\n\n    try {\n      // Assuming your login function returns a JWT token upon successful login\n      const response = await login(values.identifier, values.password);\n\n      if (response.status === 200) {\n        // Successful login\n        // Redirect the user after successful login\n        checkUserRoleAndRedirect();\n      } else {\n        // Handle other status codes (e.g., 401 for unauthorized)\n        console.error(\"Login failed with status:\", response.status);\n        toast.error(\"Invalid credentials\"); // Display an error notification\n      }\n    } catch (error) {\n      console.error(\"An error occurred during login:\", error);\n      toast.error(\"An error occurred during login\");\n    }\n  };\n\n  const getUserRoleFromToken = () => {\n    // Implement this function to extract the user's role from the JWT token.\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    if (jwtToken) {\n      const decodedToken = jwtDecode(jwtToken);\n      return decodedToken.role;\n    }\n    return \"guest\"; // Return a default role for unauthenticated users\n  };\n\n  const checkUserRoleAndRedirect = () => {\n    const userRole = getUserRoleFromToken();\n\n    if (userRole === \"admin\") {\n      navigate(\"/dashboard/admin\");\n    } else if (userRole === \"teacher\") {\n      navigate(\"/teacher/dashboard\");\n    } else if (userRole === \"student\") {\n      navigate(\"/student/dashboard/default\");\n    } else {\n      navigate(\"/session/signin\"); // Redirect unauthenticated users to sign-in page\n    }\n  };\n\n  useEffect(() => {\n    const fetchAccountSettings = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/api/account-setting`);\n        const { data } = response.data;\n\n        // Set the retrieved school settings to the state\n        setAccountSettings(data);\n      } catch (error) {\n        console.error(\"Error fetching school settings:\", error);\n      }\n    };\n\n    fetchAccountSettings();\n  }, [apiUrl]);\n\n  return (\n    <div className=\"authincation d-flex flex-column flex-lg-row flex-column-fluid\">\n      <div\n        className=\"login-aside text-center d-flex flex-column flex-row-auto\"\n        // style={{ backgroundColor: \"#000080 !important\" }}\n      >\n        <div className=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\n          <div className=\"text-center mb-lg-4 mb-2 pt-5 logo\">\n            <img\n              src={`https://edupros.s3.amazonaws.com/${accountSettings.schoolLogo}`}\n              style={{\n                width: \"200px\",\n                height: \"130px\",\n              }}\n            />\n          </div>\n          <p style={{ fontWeight: \"700\", fontSize: \"20px\", color: \"white\" }}>\n            {\" \"}\n            {accountSettings.name || \"\"}\n          </p>\n          <p className=\"mb-4\" style={{ color: \"white\" }}>\n            Welcome!...Reset password to your School Dashboard. 📚💡\n            <br />\n          </p>\n        </div>\n      </div>\n      <div\n        className=\"container flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\"\n        style={{ width: \"95%\" }}\n      >\n        <div className=\"d-flex justify-content-center h-100 align-items-center\">\n          <div className=\"authincation-content style-2\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-xl-12 tab-content\">\n                <div\n                  id=\"sign-up\"\n                  className=\"auth-form tab-pane fade show active form-validation\"\n                >\n                  <Formik\n                    onSubmit={handleFormSubmit}\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"text-center mb-4\">\n                          <h3 className=\"text-center mb-2 text-black\">\n                            Reset your password\n                          </h3>\n                        </div>\n\n                        <div className=\"mb-3\">\n                          <TextField\n                            fullWidth\n                            type=\"text\"\n                            name=\"identifier\"\n                            label={<CustomLabel label=\"Email \" required />}\n                            onBlur={handleBlur}\n                            value={values.identifier}\n                            onChange={handleChange}\n                            helperText={touched.identifier && errors.identifier}\n                            error={Boolean(\n                              errors.identifier && touched.identifier\n                            )}\n                          />\n                        </div>\n\n                        <LoadingButton\n                          type=\"submit\"\n                          color=\"primary\"\n                          loading={loading}\n                          variant=\"contained\"\n                          sx={{ my: 2 }}\n                          className=\"btn btn-block btn-primary\"\n                          style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\n                        >\n                          Reset Password\n                        </LoadingButton>\n\n                        <Paragraph>\n                          <br></br>\n                          Do you want to go back?\n                          <NavLink\n                            to=\"/session/signin\"\n                            style={{\n                              color: theme.palette.primary.main,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Go back\n                          </NavLink>\n                        </Paragraph>\n                      </form>\n                    )}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultProps } from '@mui/material/DefaultPropsProvider';\nimport Button from '@mui/material/Button';\nimport { ButtonGroupContext } from '@mui/material/ButtonGroup';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport resolveProps from '@mui/utils/resolveProps';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('span', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useDefaultProps({\n    props: resolvedProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown and the button becomes disabled.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;"],"names":["_ref","label","required","_jsxs","Typography","component","variant","children","_jsx","style","color","initialValues","identifier","password","validationSchema","Yup","shape","min","ForgotPassword","navigate","useNavigate","theme","useTheme","loading","setLoading","useState","showPassword","setShowPassword","login","useAuth","accountSettings","setAccountSettings","name","motto","address","phone","phonetwo","email","sessionStart","sessionEnd","schoolLogo","apiUrl","process","checkUserRoleAndRedirect","userRole","getUserRoleFromToken","jwtToken","localStorage","getItem","jwtDecode","role","useEffect","async","response","axios","data","error","console","fetchAccountSettings","className","src","width","height","fontWeight","fontSize","id","Formik","onSubmit","log","values","status","toast","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","type","CustomLabel","onBlur","value","onChange","helperText","Boolean","LoadingButton","sx","my","paddingTop","paddingBottom","Paragraph","NavLink","to","palette","primary","main","marginLeft","ToastContainer","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","marginRight","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","_ref2","position","visibility","display","left","size","transform","vars","action","disabled","right","React","inProps","ref","contextProps","ButtonGroupContext","resolvedProps","resolveProps","useDefaultProps","idProp","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator"],"sourceRoot":""}