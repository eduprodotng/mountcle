{"version":3,"file":"static/js/148.e25c57d3.chunk.js","mappings":"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","sources":["app/views/teacherdashboard/Analytics.jsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { Fragment, React, useEffect, useState } from \"react\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { Box } from \"@mui/system\";\nimport { Typography, Button, styled, useTheme, Table } from \"@mui/material\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Calendar from \"react-calendar\";\nimport \"./calendar.css\";\nimport \"./newcss.css\";\n\nimport \"./style.css\";\nimport axios from \"axios\";\n\nconst ContentBox = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n}));\n\nconst Title = styled(\"span\")(() => ({\n  fontSize: \"1rem\",\n  fontWeight: \"500\",\n  marginRight: \".5rem\",\n  textTransform: \"capitalize\",\n}));\n\nconst SubTitle = styled(\"span\")(({ theme }) => ({\n  fontSize: \"0.875rem\",\n  color: theme.palette.text.secondary,\n}));\n\nconst H4 = styled(\"h4\")(({ theme }) => ({\n  fontSize: \"1rem\",\n  fontWeight: \"500\",\n  marginBottom: \"16px\",\n  textTransform: \"capitalize\",\n  color: theme.palette.text.secondary,\n}));\nconst StyledTable = styled(Table)(() => ({\n  whiteSpace: \"pre\",\n  \"& thead\": {\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\n  },\n  \"& tbody\": {\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\n  },\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(1),\n}));\nconst NoticeList = styled(\"div\")(() => ({\n  marginBottom: \"20px\",\n  \"& .post-date\": {\n    padding: \"10px\",\n    borderRadius: \"5px\",\n    display: \"inline-block\",\n    marginRight: \"10px\",\n  },\n}));\nconst getRandomColor = () => {\n  const colors = [\"skyblue\", \"yellow\", \"pink\", \"blue\"];\n  const randomIndex = Math.floor(Math.random() * colors.length);\n  return colors[randomIndex];\n};\nconst Analytics = () => {\n  const { data, loading, error } = useFetch(\"/get-admin\");\n  const { palette } = useTheme();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleChangePage = (_, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const [notices, setNotices] = useState([]);\n\n  const apiUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/api/get-all-notices`);\n        setNotices(response.data);\n      } catch (error) {\n        console.error(\"Error fetching notices:\", error);\n\n        if (error.response) {\n          console.error(\"Server responded with:\", error.response.data);\n        }\n      }\n    };\n\n    fetchNotices();\n  }, [apiUrl]);\n  // Fetch user counts\n  const [userCounts, setUserCounts] = useState({\n    students: 0,\n    teachers: 0,\n    parents: 0,\n    admins: 0,\n  });\n\n  useEffect(() => {\n    const fetchUserCounts = async () => {\n      try {\n        const roles = [\"student\", \"teacher\", \"parent\", \"admin\"];\n\n        const counts = await Promise.all(\n          roles.map(async (role) => {\n            const response = await axios.get(`${apiUrl}/api/users/${role}`);\n            return { role, count: response.data.length };\n          })\n        );\n\n        const newCounts = counts.reduce((acc, { role, count }) => {\n          acc[role + \"s\"] = count;\n          return acc;\n        }, {});\n\n        setUserCounts(newCounts);\n      } catch (error) {\n        console.error(\"Error fetching user counts:\", error);\n\n        if (error.response) {\n          console.error(\"Server responded with:\", error.response.data);\n        }\n      }\n    };\n\n    fetchUserCounts();\n  }, [apiUrl]);\n\n  return (\n    <div>\n      <h2 style={{ paddingTop: \"15px\", paddingLeft: \"10px\" }}>\n        Teacher Dashboard\n      </h2>\n      <div className=\"row gutters-20\" style={{ marginTop: \"10px\" }}>\n        {Object.entries(userCounts).map(([role, count]) => (\n          <div key={role} className=\"col-xl-3 col-sm-6 col-12\">\n            <div className=\"dashboard-summery-one mg-b-20\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-6\">\n                  <div\n                    className={`item-icon bg-light-${\n                      role === \"admins\"\n                        ? \"red\"\n                        : role === \"teachers\"\n                        ? \"blue\"\n                        : role === \"parents\"\n                        ? \"yellow\"\n                        : \"green\"\n                    }`}\n                  >\n                    <FontAwesomeIcon\n                      icon={\n                        role === \"admins\"\n                          ? faUsers\n                          : role === \"teachers\"\n                          ? faUsers\n                          : role === \"parents\"\n                          ? faUserFriends\n                          : faUser\n                      }\n                      className={`flaticon-classmates text-${\n                        role === \"admins\"\n                          ? \"red\"\n                          : role === \"teachers\"\n                          ? \"blue\"\n                          : role === \"parents\"\n                          ? \"yellow\"\n                          : \"green\"\n                      }`}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"item-content\">\n                    <div className=\"item-title\">\n                      {role.charAt(0).toUpperCase() + role.slice(1)}\n                    </div>\n                    <div className=\"item-number\">\n                      <span className=\"counter\" data-num={count}>\n                        {count}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"row gutters-20\" style={{ marginTop: \"60px\" }}></div>\n      <div className=\"cald\">\n        <div className=\"one\">\n          <div style={{ border: \"1px solid #ddd\", padding: \"20px\" }}>\n            <h2 style={{ marginBottom: \"20px\" }}>Event Calendar</h2>\n            <Calendar\n              onChange={handleDateChange}\n              value={selectedDate}\n              style={{\n                width: \"100% !important\",\n                padding: \"20px\",\n                flexBasis: \"70%\",\n                height: \"500px\",\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"two\">\n          <h2>Notice Board</h2>\n          <div\n            className=\"notice-box-wrap m-height-660\"\n            style={{ display: \"flex\", flexWrap: \"wrap\" }}\n          >\n            {notices.map((notice) => (\n              <NoticeList\n                key={notice._id}\n                style={{ flexBasis: \"48%\", margin: \"0 1%\" }}\n              >\n                <div\n                  className={`post-date bg-${getRandomColor()}`}\n                  style={{ width: \"100%\" }}\n                >\n                  {new Date(notice.date).toLocaleDateString()}\n                </div>\n                <Typography variant=\"h6\" className=\"notice-title\">\n                  <a href=\"#\">{notice.notice}</a>\n                </Typography>\n                <div className=\"entry-meta\">\n                  {notice.posted_by} / <span>5 min ago</span>\n                </div>\n              </NoticeList>\n            ))}\n            {/* ... other notices ... */}\n          </div>\n        </div>\n      </div>\n\n      <Fragment>\n        <ContentBox className=\"analytics\"></ContentBox>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"names":["ContentBox","styled","_ref","theme","margin","breakpoints","down","NoticeList","fontSize","fontWeight","marginRight","textTransform","_ref2","color","palette","text","secondary","_ref3","marginBottom","Table","whiteSpace","paddingLeft","paddingRight","Button","_ref4","spacing","padding","borderRadius","display","getRandomColor","colors","Math","floor","random","length","Analytics","data","loading","error","useFetch","useTheme","page","setPage","useState","rowsPerPage","setRowsPerPage","selectedDate","setSelectedDate","Date","notices","setNotices","apiUrl","process","useEffect","async","response","axios","console","fetchNotices","userCounts","setUserCounts","students","teachers","parents","admins","roles","newCounts","Promise","all","map","role","count","reduce","acc","_ref5","fetchUserCounts","_jsxs","children","_jsx","style","paddingTop","className","marginTop","Object","entries","_ref6","FontAwesomeIcon","icon","faUsers","faUserFriends","faUser","charAt","toUpperCase","slice","border","Calendar","onChange","date","value","width","flexBasis","height","flexWrap","notice","toLocaleDateString","Typography","variant","href","posted_by","_id","Fragment"],"sourceRoot":""}